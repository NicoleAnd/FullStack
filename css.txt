2017-10-13
==========================================================================================================

* 表格
1 基本表格的使用
      <table>
           <tr>
               <td></td>
           </tr>
      </table>

      th表示表头 

2 表格单元格的合并
	rowspan="2"    colspan="2"


3 thead tbody  tfoot

* div和span
  无任何语义的标签 这两个一般用于网页布局
  div 容器级标签（里面可以放任何东西）
      <div>
          <p></p>
          <ul>
              <li></li>
          </ul>
          <form>
          </form>
      </div> 

   div 可以理解一个区域 做分割作用  div+css制作网页  
   div负责页面结构 css负责页面的样式   

   span 文本级 把一些语义相近或功能相同的文本标签放一起 span本身没有
   任何默认样式 也需要配合CSS使用


* html注释
    注释 ------ 注解解释 给人去看的 计算机执行的时候会忽略，养成写注释的习惯
    <!--  注释 -->  sublime快捷键 ctrl+shift+/

* 字符实体 
     &lt; <    
     &gt; >
     &copy; 版权
     &reg;

* 废弃标签
    <font></font> 
      b strong 加粗
      u
      i  em  倾斜
      del
     我们使用这些标签不是用它默认表现的样式，主要把这些标签当成CSS钩子

     我是中国人，我爱<b>中国</b>

 
          b {
             font-size: 26px
          }

总结  html是标记语言 ，它负责给文本赋予语义化 用什么标签 不是看样子
  要看语义

CSS语言  
    1 层叠样式表 说白了就是表示给页面的元素（标签）增加样式 
    2 最新版本css3,css3有兼容问题，先学习css2.1版本（没有浏览器兼容问题）
    3 书写位置
         * 内嵌式

         * 外链式(推荐使用)

         * 行内式（用的很少 后台工程师喜欢用）
    4 语法
        p {
 	       text-align: center;
 	       color: red;
	       font-size: 26px;
       } 

       css就学两大部分 第一部分   选择器（操作谁的 给谁加样式） 
                       第二部分   具体样式  k:v;  k 键 样式名
                                            k:v;  v 值 样式值

    5 先学几个样式
        color:blue;  表示文字颜色
        background-color: red; 背景色
        font-size: 26px 字号
        border:1px solid red; 1px指的是边框粗细  solid表示形状是实线 red 线的颜色
        text-align: center; 让文本水平居中


    6 选择器
       * 标签选择器----- 选择到页面所有的标签
           h2 {
	    	color: blue;
	    }

	    p {
	    	font-size: 18px;
	    }

	   * id选择器 ------ 选择到页面唯一的元素
	         #p1 {
	    	background-color: red;
	    } 

	    任何元素都可以有id属性  合法的id属性是英语字母开头，区分大小写，可以有数字
	    下划线 -
	    一个页面id一定要保持唯一

	    * 类选择器
	        .aa {
	   	   font-size: 24px;
	       } 
          使用


2017-10-16
==========================================================================================================
css类选择器补充
1 类选择器可以被多个元素去使用
       
     <p class="demo"></p>
     <p class="demo"></p>
     <p></p>

     .demo {
          color: red;
     }

2 同一个标签 可以携带多个类名


3 案例     

   我是一段文字   颜色是蓝色 字号30px
   我是一段文字   颜色是蓝色 正常字号  下划线
   我是一段文字   字号30px 下划线

 高级选择器
  * 后代选择器 后代用空格隔开
       div p {
	   	    color: green;
	   } 

 1 选择的是后代的元素,后代不一定是儿子，可能是孙子、曾孙子....都行

 2 可以描述祖先关系 注意顺序的问题  

  * 交集选择器(标签指定式选择器)	    
      p.demo 既是p元素又是class为demo

  * 并集选择器 选择器之间用逗号隔开
      div,p {
	  	  font-size: 40px;
	   	   color: red;
	  }   

  * 通配符选择器 表示选中页面中所有的元素

        * {
	   	  text-decoration: underline;
	   	  color: skyblue;
	   }

	   通配符效率比较低，一般很少使用  

css的继承性和层叠性
1 继承性
   css语言有这样一个特点,一旦我们给一个元素设置里样式属性，那么它的后代
   元素同样拥有了该属性
   哪些属性可以被继承? font-系列、color、text-系列、line-系列 
                       background-color不能继承 border不能继承
   继承特效在开发中很方便，往往利用继承做一些基本普遍的设置 
   
2 层叠
   层叠性  不同的选择器作用了一个标签上,听谁的呢? 处理冲突的能力

   选择器的基本权重 id选择器  > 类选择器  > 标签选择器
   复杂的选择器权重 id选择器个数  class选择器个数  标签选择器的个数 
            先比较id选择器个数 多的胜出 假如一样 再比class选择器 依次类推
    继承来的属性 权重0
    权重一样 后面覆盖前面的
    都是通过继承的属性 要看谁描述的近 就听谁的
    
周三  颜色表示法
      文字
      盒模型
      ...

    

2017-10-18
==========================================================================================================
层叠性总结
 判断选择器有没有选中上元素，分两种情况，
    第一种没有选中则意味着通过继承来的属性 权重为0
           多个选择器都是继承来的属性 远近不不一样，就近原则,
           假如远近一样 此时再比较（id选择器个数 类选择器个数  标签选择器个数）
    第二种情况选中，此时比权重（id选择器个数 类选择器个数  标签选择器个数） ，以权重大的为准，权重一样情况下，谁出现在最后就听谁的

!important 提升权重
  *  一个页面任何一个标签 携带了原子类，不希望它被层叠掉，此时可以用
  !important来提升权重,页面中避免滥用它，一般只在原子类情况下
  * !important不影响继承的权重 权重仍为0
  * !important不影响就近原则 
  * 当既是继承又是描述远近一样 设置!important 提升权重

css属性
* 文字属性
* 颜色
* 盒模型
* 浮动
* 定位
* 表格和列表

========颜色========
  颜色表示方法
      1  单词描述  yellow  black red green white pink purple gray ....
      2 rgb模式  red green blue 
           rgb(255,0,0)  红色   
           rgb(0,255,0) 绿色
           rgb(0,0,255) 蓝色
           rgb(111,111,111) 灰色  256*256*256
           以后会有工具（ps、fascapture....）帮助我们获取颜色对应的数字
      3 十六进制表示  以#开头 后面有6为数字 表示红绿蓝的数量
           #ff0000 红色 可以省略#f00
           #00ff00 绿色
           #0000ff 蓝色    #ffffff 白  #000000黑
           以后会有工具    
========文字相关属性=======
 color 字体颜色  颜色可以三种表示方法 可以继承
 font-size: 文字大小（字号） 移动端单位rem em单位
             font-size: 16px 
             实际验证 18px 是字饱满汉字的真实高度
             实际工作中，具体使用多少字号 根据设计师的实际图
             不同浏览器的默认字号不一样 有的是12px 有的是14px
             谷歌浏览器字号最小值12px,设计师设计10px,此时"告状"
 line-height 表示行高 表示文字所在这一行的高度叫行高，文字在行里垂直居中

 font属性综合写法 font: 字号/行高 字体


 font-family 字体
          font-family: 字体值
       字体值要用一对英文的双引号引起来,字体不能随便设置，前提是用户电脑安装了该字体
          font-family: "宋体";
          font-family: "微软雅黑"
          为了保险再放置一备选字体 font-family: "微软雅黑","宋体";
           font-family: "Microsoft Yahei","SimSun";  

  font-weight 加粗
                
      font-weight: bold;等价于font-weight:700
      font-weight: normal;等价于font-weight:400
  
  font-style 表示字体是否倾斜 italic值表示倾斜


  text-decoration 字符装饰
             none
             underline 下划线
             overline 上划线
             line-through



2017-10-20
==========================================================================================================
文字属性
  
 font: italic bold 14px/28px arial,sans-serif;
 font是一个综合属性  等价于
     font-style: italic;
     font-weight: bold;
     font-size: 14px;
     line-height: 28px;
     font-family: arial,sans-serif;

  一般font这么综合 
       font: 14px/28px "Microsoft Yahei","SimSun";   

text-indext与text-align
     text-indext 表示文字缩进    


===================盒模型=============
1  盒模型类似于“放照片的相框”
       盒模型涉及 width  height  padding border margin这些属性

    任何html元素都是一个盒子 就是一个矩形   
    
2 大家有这样一个认识 盒子的真实宽度不是width属性的值，width值指的是内容宽度
而盒子真实宽度=左border+左padding+width+右padding+右border 


3 padding属性
     指的是内容到边框之间的距离 四个方向都有值
        * padding: 20px;  上右下左都是20px 
           等价于以下写法
              padding-top: 20px;
              padding-right: 20px;
              padding-bottom: 20px;
              padding-left: 20px;
        * padding: 10px     20px       30px           40px; 上 右 下 左
                  上内边距   右内边距    下内边距     左内边距

        * padding: 10px 40px 20px; /*上10  右40 下20 左 40*/  
        
        * padding: 20px 40px; /*上20 右40 下20 左40*/

        30px  其他的都是40px

        padding: 40px;
        padding-top: 30px;         


   注意  浏览器对某些元素比如ul等加上默认padding、margin样式往往影响制作页面
    所以往往会把浏览器的默认样式去掉    

4 border边框
     三要素  粗细  线型  颜色
     border: 10px solid #f00;  

     关于线型
        none	定义无边框。
        hidden	与 "none" 相同。不过应用于表时除外，对于表，hidden 用于解决边框冲突。
        dotted	定义点状边框。在大多数浏览器中呈现为实线。
        dashed	定义虚线。在大多数浏览器中呈现为实线。
        solid	定义实线。
        double	定义双线。双线的宽度等于 border-width 的值。
        groove	定义 3D 凹槽边框。其效果取决于 border-color 的值。
        inset	定义 3D inset 边框。其效果取决于 border-color 的值。
        outset	定义 3D outset 边框。其效果取决于 border-color 的值。
        inherit	规定应该从父元素继承边框样式。

   我们工作只用solid和dashed,其他的都有兼容问题
   
   border: 10px solid #f00; 

   等价于  border-width: 10px; ------> 上右下左边框粗细都是10px
           border-style: solid;
           border-color: #f00;

     border-width  border-top-width border-right-width border-bootom-width border-left-width   
     
   border按组成要素分三个属性 border-width、border-style、border-color 每个要素按照方向又分四个方向 上 右 下 左  
   

   练习 1 要设置四个边框都是10px 线状都是实线  上红  左右黄色  下绿色    
        2 黑 10px
          红 6px 
          蓝 10px  
          紫 6px     全部为实线

5 margin外边距
     指的是自己的盒子边框外侧到其他盒子边框外侧的距离
     四个方向 分别 margin-top  margin-right margin-bottom margin-left

  margin的塌陷(上下)现象  margin小的会陷入到margin大的值 以大的为准    


2017-10-23
==========================================================================================================
css居中技术
1  text-align: center
   让盒子的文字水平居中，该属性是设置到盒子上的

   <div>文字文字</div>

   这个方法只能居中文本流的东西（文字、图片、表单元素）

2 margin:0 auto  让盒子水平居中 


3 单行文本垂直居中 line-heght=height 
   注意 对多行文本不起作用   


标准文档流
   网页从左到右从上到下去编写或显示，内置了许多性质
 * 空白折叠
 * 高矮不齐 底边对齐 
 * 标准文档流的元素分为"块级元素"和"行内级元素"
   html标签（元素）  分为两类
      容器级元素：div  h1~h6  ul li dl dt dd等（里面啥都可以放置）
      文本级元素  a  input p等（文字 图片 超链接 表单）
   标准流 分为
       块级元素  容器级元素全是块级元素以及文本级的P元素
                 div h1~h6 p li  .....

                 特点：1 能够设置宽高
                       2 不能并排（独占一行）
                       3 不设置宽度 默认为父亲的宽度 
       行内级元素  除了p元素之外的所有的文本级元素 
                    a   span  b u  i em strong
                  特点：1 不能设置宽高，宽高可以由内容撑开
                        2 能并排
        行内级元素与块元素之间的转换 display
                    display: inline; 把其他元素转成行内级元素
                    display: block; 把其他元素转成块元素                    
  总结：标准流做不出网页的，原因是网页很多元素是并排并且可以设置宽高 
    所以就要学其他技术让元素脱离标准流

让标准流的元素脱离标准流
    三种方式可以让元素脱离标准流（脱标）: 浮动 绝对定位 固定定位

    * 浮动------做并排用 

         float: left
         float: right

      基本印象: 浮动的元素去贴靠父亲的边,贴靠的过程中，假如被哥哥们挡住了
      就会贴在哥哥的边上

    * 浮动性质
        a  脱标 
             证明1  span加上浮动之后 设置宽高起效,假如浮动的元素不设置宽高
             则靠内容撑开
             证明2  css代码
	   /*第一盒子浮动 脱标*/
	    .demo1 {
	    	width: 200px;
	    	height: 200px;
	    	background-color: red;
	    	float: left;
	    }
        
        /*该盒子没有浮动*/
	    .demo2 {
	    	width: 100px;
	    	height: 100px;
	    	background-color: yellow;
	    }
        html代码
	    <div class="demo1">
		
	    </div>
	   <div class="demo2">
		
	    </div>

	    第二个div显示在标准流左上角

              

2017-10-25
==========================================================================================================
浮动
1 主要用于并排
2 性质
      * 脱标,浮动元素假如不设置宽高，宽高靠内容撑开 
      * 相互依靠 
      * 浮动的元素没有margin塌陷
      * 文字围绕现象
3 清除浮动
    方式一: 记住  浮动的元素不能撑开父亲 如何解决？
    overflow:hidden 除了可以让浮动的元素撑开父亲，还可以清除浮动
    该属性本身含义让多余内容隐藏，但是它的确可以清楚浮动
    方式二 有高度的盒子可以关住浮动（清除浮动） 工作中不常用，工作中一般不给
    父亲设置高度 
    方式三 clear:left; 清除左浮动
           clear: right; 清除右浮动
           clear: both; 全部清除  
         注意：加在后面盒子中
         缺点： 父亲仍然没有高度
                margin设置无效
    方式四  隔墙法
          html代码
              <ul class="box1">
				<li>首页</li>
				<li>产品</li>
				<li>新闻</li>
	         </ul>
	<!--希望以下是独立区域 独占一行-->
	         <div class="cl h20"></div>
				<ul class="box2">
					<li>首页2</li>
					<li>产品2</li>
					<li>新闻2</li>
				</ul>  

     方式五 内墙法
          html
      <div class="box">
	    <ul class="box1">
			<li>首页</li>
			<li>产品</li>
			<li>新闻</li>	
	   </ul>
       <p class="cl"></p> 
	  </div>
		<ul class="box2">
			<li>首页2</li>
			<li>产品2</li>
			<li>新闻2</li>
		</ul>	

     ....

     总结：清除浮动方式很多，工作中选择简单的可以有效解决问题,讲多为了面试

超链接样式修饰
        


2017-10-27
==========================================================================================================


超链接的css处理
1  超链接的四种状态
     a:link 链接未访问前的状态
     a:visited 链接已经访问后的状态
     a:hover 鼠标放上去的状态（悬停）
     a:active 鼠标按下不松手的状态


     :link :visited 等叫伪类

     .demo {

     }

     <p class="demo"></p>

2 四种状态的书写位置
       link  visited hover active  按照此顺序进行 但是可以省略其中一个或多个
       love  hate 爱恨原则

3 实际工作中超链接的处理
   a:link和a:visited写在一起


   a元素是一个行内元素，假如想设置宽高，此刻就转块，一般习惯把与盒模型相关的属性写在a标签选择器，记住下划线text-decoration写伪类里或a标签选择器中


   工作中简便的处理  
       a {
       	 	/*盒模型相关属性 访问前访问后样式属性*/
       	 }   

       	 a:hover {
       	 	/* 鼠标放上去要显示的样式 定义在此处*/
       	 }

4 超链接做一个导航
     分析问题或任务
     html部分，负责页面结构 列表 ul>li>a
     css部分  加样式



===========背景系列===========
background
1 背景色  background-color  padding区域也有背景色
2 背景图  background-image:url(路径)
          与img区别
3 背景图重复  background-repeat: no-repeat/repeat-x/repeat-y
4 背景图定位  background-position 设置图片位置 

            background-position: 像素1  像素2  参考原点在盒子左上角
               像素1表示水平方向 正数表示盒子内向右 负数表示相反方向
               像素2表示垂直方向 正数表示盒子内向下 负数表示相反方向


   应用场景: css精灵（css雪碧技术） css sprite 
               就是把多个小杂碎的图片 合成一张图  然后用背景定位只显示某一部分          




2017-10-30
==========================================================================================================


background-position: 方位名词1  方位名词2

            方位名词1表示水平方向  可以为left center  right
            方位名词2表示竖直方向  可以为top center  bottom

            background-position: 百分比
 5 background-attachment    
          background-attachment: fixed;

   背景合写 background: red url(...) no-repeat 30px 50px fixed;       
  css3新增了5个背景属性 到时候再说             

定位
1 相对定位 position: relative; 
    相对于自己进行位置的微调
    top正数向下 负数表示向上
    bottom正数表示向上  负数表示向下
    left正数表示向右  负数表示向左
    right正数表示向左 负数表示向右

    相对定位的元素仍属于标准流元素，言外之意相对定位不能脱标

    作用 1 位置稍微调整的  2 配合绝对定位使用

2 绝对定位  position: absolute; 让元素脱标
    一般用top、botton、left、right来描述位置 参考位置是页面左上角
    
   参考点：用top描述，参考点在页面的左上角或右上角
           用bottom描述 参考点浏览器首屏的左下角在页面中的位置 

           祖先盒子当参考点: 一个盒子可以以某个祖先盒子作为参考点,选择的是
   离自己最近的带有定位的父辈盒子,定位可以是相对也可以是其他任何定位        

       


3  固定定位

2017-11-01
==========================================================================================================
网络坏掉

2017-11-03
==========================================================================================================
定位 

1 定位有三种  相对定位  绝对定位   固定定位

2 相对定位 position: relative; 
         * 相对于自己原来位置而言进行位置的微调
         * 相对定位不会让元素脱标
         * 相对定位的元素 老家留坑
         * 相对定位一般配合绝对定位使用

3 绝对定位 position: absolute;
         * 绝对定位的元素脱标
         * 参考点（重点）
             最近的带有定位的祖先元素，假如父辈中没有定位的元素，则以body为准（top描述位置------以页面的左上角  bottom描述位置------以浏览器首屏对应的页面的左下角为准）
         *  经常使用"子绝父相" 祖先元素设置相对定位  儿子设置绝对定位  
         *  绝对定位的元素如何居中           
              之前的margin: 0 auto对绝对定位的盒子失效
               div {
	    	width: 500px;
	    	height: 300px;
	    	background-color: green;
	    	position: absolute;
	    	top: 50%;
	    	margin-top: -150px;
	    	left: 50%;
	    	margin-left: -250px;
	    	/* margin: 0 auto;  失效*/
	    }

         * 应用	 压盖效果90%都是用绝对定位实现
         
 4 固定定位 position: fixed; 
     * 固定定位的元素脱标
     * 参考点： 浏览器
     * 特点 固定定位的盒子随着窗口的卷动不会在视口中消失
     * 应用  固定导航栏 返回顶部....

  注意  三种脱标方法，只能有一种作用在同一个元素上
  

  5 z-index属性
      负责层级 谁压盖谁的问题
      * 只有定位的元素 才有z-index属性（言外之意即标准流元素和浮动元素不可以使用）
      * z-index数字大的压盖数字小的，一样情况下后面压盖前面的
      * z-index从父现象（拼爹）  

===================================================
           html+css制作静态网站
 1  网站由一系列网页组成
 2  设计师（ps、ai等） -------> *.psd文件（png格式文件）
    ----->前端工程师（设计想效果图转成网页形式） 
           切图+代码 ------->后端工程师----->系统

 3  本质工作
      * 做一些真实开发前的准备          
           css文件夹 存放css文件
           js文件夹 存放js文件
           img文件夹 存放图片
           index.html
      * 开始做首页     


2017-11-06
==========================================================================================================


2017-11-08
==========================================================================================================



2017-11-10
==========================================================================================================


2017-11-13
==========================================================================================================

